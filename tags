!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR	Makefile	/^AR		:= ar rcs$/;"	m
AR	libft/Makefile	/^AR		:= ar rcs$/;"	m
BUFFER_SIZE	_srcs/so_long.h	13;"	d
CC	Makefile	/^CC		:= cc$/;"	m
CC	libft/Makefile	/^CC		:= cc$/;"	m
CC	minilibx-linux/Makefile.mk	/^	CC = clang$/;"	m
CC	minilibx-linux/Makefile.mk	/^CC	= gcc$/;"	m
CC	minilibx-linux/test/Makefile.mk	/^	CC	= gcc$/;"	m
CC	minilibx-linux/test/Makefile.mk	/^	CC = clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -Wall -Wextra -Werror -I. -g$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS	:= -Wall -Wextra -Werror -I. -g$/;"	m
CFLAGS	minilibx-linux/Makefile.mk	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CFLAGS	minilibx-linux/test/Makefile.mk	/^CFLAGS= -I$(INC) -O3 -I.. -g$/;"	m
ENV_DISPLAY	minilibx-linux/mlx_int.h	43;"	d
ERR_NO_TRUECOLOR	minilibx-linux/mlx_int.h	45;"	d
HEADER_DIR	Makefile	/^HEADER_DIR	:= .$/;"	m
HEADER_DIR	libft/Makefile	/^HEADER_DIR	:= _srcs$/;"	m
HEADER_FILES	Makefile	/^HEADER_FILES	:= so_long.h$/;"	m
HEADER_FILES	libft/Makefile	/^HEADER_FILES	:= libft.h$/;"	m
IM1_SX	minilibx-linux/test/main.c	7;"	d	file:
IM1_SY	minilibx-linux/test/main.c	8;"	d	file:
IM3_SX	minilibx-linux/test/main.c	9;"	d	file:
IM3_SY	minilibx-linux/test/main.c	10;"	d	file:
INC	minilibx-linux/Makefile.mk	/^INC	=%%%%$/;"	m
INC	minilibx-linux/test/Makefile.mk	/^INC=%%%%$/;"	m
INCLIB	minilibx-linux/test/Makefile.mk	/^INCLIB=$(INC)\/..\/lib$/;"	m
KEY_A	_srcs/structures.h	/^    KEY_A     = 97,$/;"	e	enum:e_keys
KEY_D	_srcs/structures.h	/^    KEY_D     = 100,$/;"	e	enum:e_keys
KEY_ESC	_srcs/structures.h	/^    KEY_ESC   = 65307,$/;"	e	enum:e_keys
KEY_S	_srcs/structures.h	/^    KEY_S     = 115,$/;"	e	enum:e_keys
KEY_W	_srcs/structures.h	/^    KEY_W     = 119,$/;"	e	enum:e_keys
LFLAGS	minilibx-linux/test/Makefile.mk	/^LFLAGS = -L.. -lmlx -L$(INCLIB) -lXext -lX11 -lm$/;"	m
LIBFT_H	libft/_srcs/libft.h	14;"	d
LOCALHOST	minilibx-linux/mlx_int.h	44;"	d
MLX	Makefile	/^MLX = -L$(MLX_DIR) -lmlx -lXext -lX11 -lm -lz$/;"	m
MLX_DIR	Makefile	/^MLX_DIR = minilibx-linux$/;"	m
MLX_H	minilibx-linux/mlx.h	32;"	d
MLX_INT_H	minilibx-linux/mlx_int.h	19;"	d
MLX_MAX_EVENT	minilibx-linux/mlx_int.h	40;"	d
MLX_TYPE_SHM	minilibx-linux/mlx_int.h	37;"	d
MLX_TYPE_SHM_PIXMAP	minilibx-linux/mlx_int.h	36;"	d
MLX_TYPE_XIMAGE	minilibx-linux/mlx_int.h	38;"	d
NAME	Makefile	/^NAME	 	 	:= so_long$/;"	m
NAME	libft/Makefile	/^NAME	  	:= libft.a$/;"	m
NAME	minilibx-linux/Makefile.mk	/^NAME		= libmlx.a$/;"	m
NAME	minilibx-linux/test/Makefile.mk	/^NAME= mlx-test$/;"	m
NAME_UNAME	minilibx-linux/Makefile.mk	/^NAME_UNAME	= libmlx_$(UNAME).a$/;"	m
OBJ	minilibx-linux/Makefile.mk	/^OBJ	= $(addprefix $(OBJ_DIR)\/,$(SRC:%.c=%.o))$/;"	m
OBJ	minilibx-linux/test/Makefile.mk	/^OBJ = $(SRC:%.c=%.o)$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR  	:= _objs$/;"	m
OBJ_DIR	libft/Makefile	/^OBJ_DIR  	:= _objs$/;"	m
OBJ_DIR	minilibx-linux/Makefile.mk	/^OBJ_DIR = obj$/;"	m
OBJ_FILES	Makefile	/^OBJ_FILES		:= $(SRC_FILES:%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJ_FILES	libft/Makefile	/^OBJ_FILES		:= $(SRC_FILES:%.c=$(OBJ_DIR)\/%.o)$/;"	m
RETURN	minilibx-linux/mlx_xpm.c	17;"	d	file:
RM	Makefile	/^RM		:= rm -rf$/;"	m
RM	libft/Makefile	/^RM		:= rm -rf$/;"	m
SO_LONG_H	_srcs/so_long.h	3;"	d
SPRITE_0	_srcs/textures.h	5;"	d
SPRITE_1	_srcs/textures.h	6;"	d
SPRITE_C	_srcs/textures.h	8;"	d
SPRITE_E	_srcs/textures.h	7;"	d
SPRITE_ORDER	_srcs/so_long.h	16;"	d
SPRITE_P	_srcs/textures.h	9;"	d
SPRITE_SIZE	_srcs/so_long.h	17;"	d
SRC	minilibx-linux/Makefile.mk	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	minilibx-linux/test/Makefile.mk	/^SRC = main.c$/;"	m
SRC_DIR	Makefile	/^SRC_DIR   	:= _srcs$/;"	m
SRC_DIR	libft/Makefile	/^SRC_DIR   	:= _srcs$/;"	m
SRC_FILES	Makefile	/^SRC_FILES		:=	map1.c \\$/;"	m
SRC_FILES	libft/Makefile	/^SRC_FILES		:=	ft_atoi.c \\$/;"	m
SUBDIRS	Makefile	/^SUBDIRS		:= minilibx-linux libft $/;"	m
TEXXTURES_H	_srcs/textures.h	3;"	d
UNAME	minilibx-linux/Makefile.mk	/^UNAME = $(shell uname)$/;"	m
UNAME	minilibx-linux/test/Makefile.mk	/^UNAME := $(shell uname)$/;"	m
WARN_SHM_ATTACH	minilibx-linux/mlx_int.h	46;"	d
WIN1_SX	minilibx-linux/test/main.c	5;"	d	file:
WIN1_SY	minilibx-linux/test/main.c	6;"	d	file:
X_ShmAttach	minilibx-linux/mlx_new_image.c	20;"	d	file:
array	_srcs/structures.h	/^	char	**array;$/;"	m	struct:s_map
at_exit	minilibx-linux/test/run_tests.sh	/^at_exit() {$/;"	f
bpp	minilibx-linux/mlx_int.h	/^	int				bpp;$/;"	m	struct:s_img
bpp1	minilibx-linux/test/main.c	/^int	bpp1;$/;"	v
bpp2	minilibx-linux/test/main.c	/^int	bpp2;$/;"	v
bpp3	minilibx-linux/test/main.c	/^int	bpp3;$/;"	v
bpp4	minilibx-linux/test/main.c	/^int	bpp4;$/;"	v
clean	minilibx-linux/configure	/^clean(){$/;"	f
cmap	minilibx-linux/mlx_int.h	/^	Colormap	cmap;$/;"	m	struct:s_xvar
col	minilibx-linux/mlx_int.h	/^	int		col;$/;"	m	struct:s_xpm_col
collectible_count	_srcs/structures.h	/^	int		collectible_count;$/;"	m	struct:s_map
color	minilibx-linux/mlx_int.h	/^	int		color;$/;"	m	struct:s_col_name
color_map_1	minilibx-linux/test/main.c	/^int	color_map_1(void *win,int w,int h)$/;"	f
color_map_2	minilibx-linux/test/main.c	/^int	color_map_2(unsigned char *data,int bpp,int sl,int w,int h,int endian, int type)$/;"	f
count_digit	libft/_srcs/ft_itoa.c	/^static int	count_digit(long n)$/;"	f	file:
data	minilibx-linux/mlx_int.h	/^	char			*data;$/;"	m	struct:s_img
data1	minilibx-linux/test/main.c	/^char	*data1;$/;"	v
data2	minilibx-linux/test/main.c	/^char	*data2;$/;"	v
data3	minilibx-linux/test/main.c	/^char	*data3;$/;"	v
data4	minilibx-linux/test/main.c	/^char	*data4;$/;"	v
decrgb	minilibx-linux/mlx_int.h	/^	int			decrgb[6];$/;"	m	struct:s_xvar
depth	minilibx-linux/mlx_int.h	/^	int			depth;$/;"	m	struct:s_xvar
dirs	_srcs/structures.h	/^	char	dirs[4];$/;"	m	union:u_cardinal
display	minilibx-linux/mlx_int.h	/^	Display		*display;$/;"	m	struct:s_xvar
do_flush	minilibx-linux/mlx_int.h	/^	int			do_flush;$/;"	m	struct:s_xvar
down	_srcs/structures.h	/^		char	down;$/;"	m	struct:u_cardinal::__anon1
e_keys	_srcs/structures.h	/^typedef enum e_keys$/;"	g
end_loop	minilibx-linux/mlx_int.h	/^	int 		end_loop;$/;"	m	struct:s_xvar
endian1	minilibx-linux/test/main.c	/^int	endian1;$/;"	v
endian2	minilibx-linux/test/main.c	/^int	endian2;$/;"	v
endian3	minilibx-linux/test/main.c	/^int	endian3;$/;"	v
endian4	minilibx-linux/test/main.c	/^int	endian4;$/;"	v
expose_hook	minilibx-linux/mlx_int.h	/^	int					(*expose_hook)();$/;"	m	struct:s_win_list
expose_param	minilibx-linux/mlx_int.h	/^	void				*expose_param;$/;"	m	struct:s_win_list
expose_win1	minilibx-linux/test/main.c	/^int	expose_win1(void *p)$/;"	f
expose_win2	minilibx-linux/test/main.c	/^int	expose_win2(void *p)$/;"	f
format	minilibx-linux/mlx_int.h	/^	int				format;$/;"	m	struct:s_img
ft_advance	_srcs/backtracking.c	/^static t_point	ft_advance(t_map *map, t_point *pos)$/;"	f	file:
ft_atoi	libft/_srcs/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_backtracking	_srcs/backtracking.c	/^int	ft_backtracking(t_map *src)$/;"	f
ft_bzero	libft/_srcs/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_calloc	libft/_srcs/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_check_in_whitelist	_srcs/parsing.c	/^static int	ft_check_in_whitelist(t_map *map, char *wlist)$/;"	f	file:
ft_check_walls	_srcs/parsing.c	/^static int	ft_check_walls(t_map *map)$/;"	f	file:
ft_count_word	libft/_srcs/ft_split.c	/^static int	ft_count_word(const char *s, char c)$/;"	f	file:
ft_countchar_2d	_srcs/map2.c	/^int	ft_countchar_2d(t_map *map, char c)$/;"	f
ft_draw_game	_srcs/graphics.c	/^int	ft_draw_game(t_context context, t_point start)$/;"	f
ft_fill_str	libft/_srcs/ft_split.c	/^static char	*ft_fill_str(const char *s, char c)$/;"	f	file:
ft_findchr	libft/_srcs/ft_findchr.c	/^int	ft_findchr(const char *str, int c)$/;"	f
ft_findchr_2d	_srcs/map1.c	/^t_point	ft_findchr_2d(t_map *map, char c)$/;"	f
ft_flood	_srcs/backtracking.c	/^static int	ft_flood(t_map *map, t_point current)$/;"	f	file:
ft_free_2d	libft/_srcs/ft_split.c	/^void	ft_free_2d(char ***arr)$/;"	f
ft_get_file	_srcs/read_map.c	/^static char	*ft_get_file(int fd)$/;"	f	file:
ft_get_vector	_srcs/input_management.c	/^static t_point	ft_get_vector(int up, int down, int left, int right)$/;"	f	file:
ft_isalnum	libft/_srcs/ft_isalnum.c	/^int	ft_isalnum(int var)$/;"	f
ft_isalpha	libft/_srcs/ft_isalpha.c	/^int	ft_isalpha(int str)$/;"	f
ft_isascii	libft/_srcs/ft_isascii.c	/^int	ft_isascii(int var)$/;"	f
ft_isdigit	libft/_srcs/ft_isdigit.c	/^int	ft_isdigit(int num)$/;"	f
ft_isprint	libft/_srcs/ft_isprint.c	/^int	ft_isprint(int var)$/;"	f
ft_itoa	libft/_srcs/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_key_listener	_srcs/input_management.c	/^int	ft_key_listener(int	keycode, t_context *context)$/;"	f
ft_map_init	_srcs/map1.c	/^void	ft_map_init(t_map *map)$/;"	f
ft_memchr	libft/_srcs/ft_memchr.c	/^void	*ft_memchr(const void *str0, int c0, size_t n)$/;"	f
ft_memcmp	libft/_srcs/ft_memcmp.c	/^int	ft_memcmp(const void *first0, const void *second0, size_t len)$/;"	f
ft_memcpy	libft/_srcs/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_t n)$/;"	f
ft_memmove	libft/_srcs/ft_memmove.c	/^void	*ft_memmove(void *dst0, const void *src0, size_t len)$/;"	f
ft_memset	libft/_srcs/ft_memset.c	/^void	*ft_memset(void *b0, int c, size_t len)$/;"	f
ft_parsing	_srcs/parsing.c	/^int	ft_parsing(t_map *map)$/;"	f
ft_player_movement	_srcs/input_management.c	/^static int	ft_player_movement(int	keycode, t_context *context)$/;"	f	file:
ft_putchar_fd	libft/_srcs/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl_fd	libft/_srcs/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f
ft_putnbr_fd	libft/_srcs/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr	libft/_srcs/ft_putstr.c	/^void	ft_putstr(char *s)$/;"	f
ft_putstr_fd	libft/_srcs/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f
ft_read_map	_srcs/read_map.c	/^int	ft_read_map(t_map *map, int fd)$/;"	f
ft_realloc	libft/_srcs/ft_realloc.c	/^char	*ft_realloc(char *str, int size)$/;"	f
ft_split	libft/_srcs/ft_split.c	/^char	**ft_split(const char *s, char c)$/;"	f
ft_sprites_init	_srcs/graphics.c	/^static void	ft_sprites_init(void *mlx, void *sprites[6])$/;"	f	file:
ft_strchr	libft/_srcs/ft_strchr.c	/^char	*ft_strchr(const char *str0, int c0)$/;"	f
ft_strdup	libft/_srcs/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strdup_2d	_srcs/map1.c	/^char	**ft_strdup_2d(t_map *map)$/;"	f
ft_striteri	libft/_srcs/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f
ft_strjoin	libft/_srcs/ft_strjoin.c	/^char	*ft_strjoin(const char *s1, const char *s2)$/;"	f
ft_strlcat	libft/_srcs/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlcpy	libft/_srcs/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst0, const char *src0, size_t dstsize)$/;"	f
ft_strlen	libft/_srcs/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f
ft_strmapi	libft/_srcs/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncmp	libft/_srcs/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strnstr	libft/_srcs/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	libft/_srcs/ft_strrchr.c	/^char	*ft_strrchr(const char *str, int c0)$/;"	f
ft_strtrim	libft/_srcs/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_substr	libft/_srcs/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f
ft_sum_point	_srcs/point.c	/^t_point	ft_sum_point(t_point a, t_point b)$/;"	f
ft_tolower	libft/_srcs/ft_tolower.c	/^int	ft_tolower(int c0)$/;"	f
ft_toupper	libft/_srcs/ft_toupper.c	/^int	ft_toupper(int c0)$/;"	f
ft_werror	libft/_srcs/ft_werror.c	/^int	ft_werror(char *s)$/;"	f
gc	minilibx-linux/mlx_int.h	/^	GC					gc;$/;"	m	struct:s_win_list
gc	minilibx-linux/mlx_int.h	/^	GC				gc;$/;"	m	struct:s_img
gere_mouse	minilibx-linux/test/new_win.c	/^int gere_mouse(int x,int y,int button,void*toto)$/;"	f
get_end	libft/_srcs/ft_strtrim.c	/^static int	get_end(char const *s1, char const *set, int end)$/;"	f	file:
get_value	_srcs/map1.c	/^static char	get_value(t_map *map, t_point coord)$/;"	f	file:
get_value	_srcs/structures.h	/^	char	(*get_value)(t_map *, t_point);$/;"	m	struct:s_map
get_xlib_include_path	minilibx-linux/configure	/^get_xlib_include_path(){$/;"	f
height	minilibx-linux/mlx_int.h	/^	int				height;$/;"	m	struct:s_img
hook	minilibx-linux/mlx_int.h	/^	int		(*hook)();$/;"	m	struct:s_event_list
hooks	minilibx-linux/mlx_int.h	/^	t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list
im1	minilibx-linux/test/main.c	/^void    *im1;$/;"	v
im2	minilibx-linux/test/main.c	/^void	*im2;$/;"	v
im3	minilibx-linux/test/main.c	/^void	*im3;$/;"	v
im4	minilibx-linux/test/main.c	/^void	*im4;$/;"	v
image	minilibx-linux/mlx_int.h	/^	XImage			*image;$/;"	m	struct:s_img
is_in	libft/_srcs/ft_strtrim.c	/^static int	is_in(char *set, char c)$/;"	f	file:
key_hook	minilibx-linux/mlx_int.h	/^	int					(*key_hook)();$/;"	m	struct:s_win_list
key_param	minilibx-linux/mlx_int.h	/^	void				*key_param;$/;"	m	struct:s_win_list
key_win1	minilibx-linux/test/main.c	/^int	key_win1(int key,void *p)$/;"	f
key_win2	minilibx-linux/test/main.c	/^int	key_win2(int key,void *p)$/;"	f
key_win3	minilibx-linux/test/main.c	/^int	key_win3(int key,void *p)$/;"	f
left	_srcs/structures.h	/^		char	left;$/;"	m	struct:u_cardinal::__anon1
local_endian	minilibx-linux/test/main.c	/^int	local_endian;$/;"	v
log_error	minilibx-linux/configure	/^log_error(){$/;"	f
log_error	minilibx-linux/test/run_tests.sh	/^log_error(){$/;"	f
log_info	minilibx-linux/configure	/^log_info(){$/;"	f
log_info	minilibx-linux/test/run_tests.sh	/^log_info(){$/;"	f
logging	minilibx-linux/configure	/^logging(){$/;"	f
logging	minilibx-linux/test/run_tests.sh	/^logging(){$/;"	f
loop_hook	minilibx-linux/mlx_int.h	/^	int			(*loop_hook)();$/;"	m	struct:s_xvar
loop_param	minilibx-linux/mlx_int.h	/^	void		*loop_param;$/;"	m	struct:s_xvar
main	_srcs/so_long.c	/^int	main(int argc, char **argv)$/;"	f
main	minilibx-linux/test/main.c	/^int	main()$/;"	f
main	minilibx-linux/test/new_win.c	/^int main()$/;"	f
main	minilibx-linux/test/run_tests.sh	/^main(){$/;"	f
main	test.c	/^int	main(int argc, char **argv)$/;"	f
map	_srcs/structures.h	/^	t_map	*map;$/;"	m	struct:s_context
mask	minilibx-linux/mlx_int.h	/^	int		mask;$/;"	m	struct:s_event_list
max	_srcs/structures.h	/^	t_point	max;$/;"	m	struct:s_map
mlx	_srcs/structures.h	/^	void	*mlx;$/;"	m	struct:s_context
mlx	minilibx-linux/test/main.c	/^void	*mlx;$/;"	v
mlx	minilibx-linux/test/new_win.c	/^void *mlx;$/;"	v
mlx_X_error	minilibx-linux/mlx_new_image.c	/^int	mlx_X_error;$/;"	v
mlx_clear_window	minilibx-linux/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f
mlx_col_name	minilibx-linux/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name
mlx_destroy_display	minilibx-linux/mlx_destroy_display.c	/^int	mlx_destroy_display(t_xvar *xvar)$/;"	f
mlx_destroy_image	minilibx-linux/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f
mlx_destroy_window	minilibx-linux/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f
mlx_do_key_autorepeatoff	minilibx-linux/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f
mlx_do_key_autorepeaton	minilibx-linux/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f
mlx_do_sync	minilibx-linux/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f
mlx_expose_hook	minilibx-linux/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_ext_fullscreen	minilibx-linux/mlx_ext_randr.c	/^int			mlx_ext_fullscreen(t_xvar *xvar, t_win_list *win, int fullscreen)$/;"	f
mlx_flush_event	minilibx-linux/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f
mlx_get_color_value	minilibx-linux/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f
mlx_get_data_addr	minilibx-linux/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f
mlx_get_screen_size	minilibx-linux/mlx_screen_size.c	/^int		mlx_get_screen_size(void *mlx_ptr, int *sizex, int *sizey)$/;"	f
mlx_hook	minilibx-linux/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f
mlx_init	minilibx-linux/mlx_init.c	/^void	*mlx_init()$/;"	f
mlx_int_anti_resize_win	minilibx-linux/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f
mlx_int_deal_shm	minilibx-linux/mlx_init.c	/^int		mlx_int_deal_shm(t_xvar *xvar)$/;"	f
mlx_int_do_nothing	minilibx-linux/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f
mlx_int_egal_img	minilibx-linux/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f
mlx_int_file_get_rid_comment	minilibx-linux/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f
mlx_int_get_col_name	minilibx-linux/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f
mlx_int_get_good_color	minilibx-linux/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f
mlx_int_get_line	minilibx-linux/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f
mlx_int_get_text_rgb	minilibx-linux/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f
mlx_int_get_visual	minilibx-linux/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f
mlx_int_new_image	minilibx-linux/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f
mlx_int_new_xshm_image	minilibx-linux/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f
mlx_int_param_ButtonPress	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_ButtonRelease	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_Expose	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_KeyPress	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_KeyRelease	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_MotionNotify	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_event	minilibx-linux/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v
mlx_int_param_generic	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_undef	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f
mlx_int_parse_xpm	minilibx-linux/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f
mlx_int_rgb_conversion	minilibx-linux/mlx_init.c	/^int		mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f
mlx_int_set_win_event_mask	minilibx-linux/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f
mlx_int_static_line	minilibx-linux/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f
mlx_int_str_str	minilibx-linux/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f
mlx_int_str_str_cote	minilibx-linux/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f
mlx_int_str_to_wordtab	minilibx-linux/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f
mlx_int_wait_first_expose	minilibx-linux/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f
mlx_int_xpm_f_image	minilibx-linux/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f
mlx_int_xpm_set_pixel	minilibx-linux/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f
mlx_key_hook	minilibx-linux/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_loop	minilibx-linux/mlx_loop.c	/^int			mlx_loop(t_xvar *xvar)$/;"	f
mlx_loop_end	minilibx-linux/mlx_loop.c	/^int			mlx_loop_end(t_xvar *xvar)$/;"	f
mlx_loop_hook	minilibx-linux/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f
mlx_mouse_get_pos	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_get_pos(t_xvar *xvar, t_win_list *win, \\$/;"	f
mlx_mouse_hide	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_hide(t_xvar *xvar, t_win_list *win)$/;"	f
mlx_mouse_hook	minilibx-linux/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_mouse_move	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_move(t_xvar *xvar, t_win_list *win, int x, int y)$/;"	f
mlx_mouse_show	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_show(t_xvar *xvar, t_win_list *win)$/;"	f
mlx_new_image	minilibx-linux/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f
mlx_new_image2	minilibx-linux/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f
mlx_new_window	minilibx-linux/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f
mlx_pixel_put	minilibx-linux/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f
mlx_put_image_to_window	minilibx-linux/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f
mlx_set_font	minilibx-linux/mlx_set_font.c	/^void	mlx_set_font(t_xvar *xvar, t_win_list *win, char *name)$/;"	f
mlx_string_put	minilibx-linux/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f
mlx_xpm_file_to_image	minilibx-linux/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f
mlx_xpm_file_to_image	minilibx-linux/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx-linux/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx-linux/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f
mouse_hook	minilibx-linux/mlx_int.h	/^	int					(*mouse_hook)();$/;"	m	struct:s_win_list
mouse_param	minilibx-linux/mlx_int.h	/^	void				*mouse_param;$/;"	m	struct:s_win_list
mouse_win1	minilibx-linux/test/main.c	/^int	mouse_win1(int button,int x,int y, void *p)$/;"	f
mouse_win2	minilibx-linux/test/main.c	/^int	mouse_win2(int button,int x,int y, void *p)$/;"	f
mouse_win3	minilibx-linux/test/main.c	/^int	mouse_win3(int x,int y, void *p)$/;"	f
name	minilibx-linux/mlx_int.h	/^	char	*name;$/;"	m	struct:s_col_name
name	minilibx-linux/mlx_int.h	/^	int		name;$/;"	m	struct:s_xpm_col
next	minilibx-linux/mlx_int.h	/^	struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list::s_win_list
param	minilibx-linux/mlx_int.h	/^	void	*param;$/;"	m	struct:s_event_list
parse_args	minilibx-linux/configure	/^parse_args(){$/;"	f
pix	minilibx-linux/mlx_int.h	/^	Pixmap			pix;$/;"	m	struct:s_img
player_pos	_srcs/structures.h	/^	t_point	player_pos;$/;"	m	struct:s_map
private_cmap	minilibx-linux/mlx_int.h	/^	int			private_cmap;$/;"	m	struct:s_xvar
pshm_format	minilibx-linux/mlx_int.h	/^	int			pshm_format;$/;"	m	struct:s_xvar
right	_srcs/structures.h	/^		char	right;$/;"	m	struct:u_cardinal::__anon1
root	minilibx-linux/mlx_int.h	/^	Window		root;$/;"	m	struct:s_xvar
run_on_subdirs	Makefile	/^define run_on_subdirs$/;"	m
s_col_name	minilibx-linux/mlx_int.h	/^struct	s_col_name$/;"	s
s_context	_srcs/structures.h	/^typedef struct s_context$/;"	s
s_dir	_srcs/structures.h	/^	} s_dir;$/;"	m	union:u_cardinal	typeref:struct:u_cardinal::__anon1
s_event_list	minilibx-linux/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_img	minilibx-linux/mlx_int.h	/^typedef struct	s_img$/;"	s
s_map	_srcs/structures.h	/^typedef struct s_map$/;"	s
s_point	_srcs/structures.h	/^typedef struct s_point$/;"	s
s_win_list	minilibx-linux/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_xpm_col	minilibx-linux/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xvar	minilibx-linux/mlx_int.h	/^typedef struct	s_xvar$/;"	s
saved_mode	minilibx-linux/mlx_ext_randr.c	/^RRMode	saved_mode = 0;$/;"	v
screen	minilibx-linux/mlx_int.h	/^	int			screen;$/;"	m	struct:s_xvar
set_value	_srcs/map1.c	/^static int	set_value(t_map *map, t_point coord, char value)$/;"	f	file:
set_value	_srcs/structures.h	/^	int		(*set_value)(t_map *, t_point, char);$/;"	m	struct:s_map
shm	minilibx-linux/mlx_int.h	/^	XShmSegmentInfo	shm;$/;"	m	struct:s_img
shm_att_pb	minilibx-linux/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f
show_help	minilibx-linux/configure	/^show_help(){$/;"	f
sigint_handler	minilibx-linux/test/run_tests.sh	/^sigint_handler(){$/;"	f
size_line	minilibx-linux/mlx_int.h	/^	int				size_line;$/;"	m	struct:s_img
sl1	minilibx-linux/test/main.c	/^int	sl1;$/;"	v
sl2	minilibx-linux/test/main.c	/^int	sl2;$/;"	v
sl3	minilibx-linux/test/main.c	/^int	sl3;$/;"	v
sl4	minilibx-linux/test/main.c	/^int	sl4;$/;"	v
strlcpy_is_not_posix	minilibx-linux/mlx_xpm.c	/^unsigned int	strlcpy_is_not_posix(char *dest, char *src, unsigned int size)$/;"	f
t_cardinal	_srcs/structures.h	/^}	t_cardinal;$/;"	t	typeref:union:u_cardinal
t_context	_srcs/structures.h	/^}	t_context;$/;"	t	typeref:struct:s_context
t_event_list	minilibx-linux/mlx_int.h	/^}				t_event_list;$/;"	t	typeref:struct:s_event_list
t_img	minilibx-linux/mlx_int.h	/^}				t_img;$/;"	t	typeref:struct:s_img
t_keys	_srcs/structures.h	/^}   t_keys;$/;"	t	typeref:enum:e_keys
t_map	_srcs/structures.h	/^typedef struct s_map	t_map;$/;"	t	typeref:struct:s_map
t_map	_srcs/structures.h	/^}	t_map;$/;"	t	typeref:struct:s_map
t_point	_srcs/structures.h	/^}	t_point;$/;"	t	typeref:struct:s_point
t_win_list	minilibx-linux/mlx_int.h	/^}				t_win_list;$/;"	t	typeref:struct:s_win_list
t_xpm_col	minilibx-linux/mlx_int.h	/^}				t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xvar	minilibx-linux/mlx_int.h	/^}				t_xvar;$/;"	t	typeref:struct:s_xvar
test_default_main	minilibx-linux/test/run_tests.sh	/^test_default_main(){$/;"	f
type	minilibx-linux/mlx_int.h	/^	int				type;$/;"	m	struct:s_img
u_cardinal	_srcs/structures.h	/^typedef union u_cardinal$/;"	u
under_player	_srcs/structures.h	/^	char	under_player;$/;"	m	struct:s_map
up	_srcs/structures.h	/^		char	up;$/;"	m	struct:u_cardinal::__anon1
use_xshm	minilibx-linux/mlx_int.h	/^	int			use_xshm;$/;"	m	struct:s_xvar
visual	minilibx-linux/mlx_int.h	/^	Visual		*visual;$/;"	m	struct:s_xvar
width	minilibx-linux/mlx_int.h	/^	int				width;$/;"	m	struct:s_img
win	_srcs/structures.h	/^	void	*win;$/;"	m	struct:s_context
win1	minilibx-linux/test/main.c	/^void	*win1;$/;"	v
win1	minilibx-linux/test/new_win.c	/^void *win1;$/;"	v
win2	minilibx-linux/test/main.c	/^void    *win2;$/;"	v
win2	minilibx-linux/test/new_win.c	/^void *win2;$/;"	v
win3	minilibx-linux/test/main.c	/^void    *win3;$/;"	v
win_count	minilibx-linux/mlx_loop.c	/^static int	win_count(t_xvar *xvar)$/;"	f	file:
win_list	minilibx-linux/mlx_int.h	/^	t_win_list	*win_list;$/;"	m	struct:s_xvar
window	minilibx-linux/mlx_int.h	/^	Window				window;$/;"	m	struct:s_win_list
wm_delete_window	minilibx-linux/mlx_int.h	/^	Atom		wm_delete_window;$/;"	m	struct:s_xvar
wm_protocols	minilibx-linux/mlx_int.h	/^	Atom		wm_protocols;$/;"	m	struct:s_xvar
x	_srcs/structures.h	/^	int	x;$/;"	m	struct:s_point
xpm1_x	minilibx-linux/test/main.c	/^int	xpm1_x;$/;"	v
xpm1_y	minilibx-linux/test/main.c	/^int	xpm1_y;$/;"	v
y	_srcs/structures.h	/^	int	y;$/;"	m	struct:s_point
